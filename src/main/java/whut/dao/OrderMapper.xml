<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="whut.dao.OrderDao">
  <resultMap id="orderResultMap" type="whut.pojo.OrderMaster">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="order_number" jdbcType="BIGINT" property="orderNumber" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="consignee_name" jdbcType="VARCHAR" property="consigneeName" />
    <result column="consignee_phone" jdbcType="VARCHAR" property="consigneePhone" />
    <result column="postal_code" jdbcType="INTEGER" property="postalCode" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="first_addr" jdbcType="VARCHAR" property="firstAddr" />
    <result column="second_addr" jdbcType="VARCHAR" property="secondAddr" />
    <result column="payment_mode" jdbcType="TINYINT" property="paymentMode" />
    <result column="order_moeny" jdbcType="DECIMAL" property="orderMoeny" />
    <result column="discount_money" jdbcType="DECIMAL" property="discountMoney" />
    <result column="shipping_money" jdbcType="DECIMAL" property="shippingMoney" />
    <result column="payment_money" jdbcType="DECIMAL" property="paymentMoney" />
    <result column="tax_money" jdbcType="DECIMAL" property="taxMoney" />
    <result column="express_number" jdbcType="VARCHAR" property="expressNumber" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="shipping_time" jdbcType="TIMESTAMP" property="shippingTime" />
    <result column="receive_time" jdbcType="TIMESTAMP" property="receiveTime" />
    <result column="order_status" jdbcType="TINYINT" property="orderStatus" />
    
    <collection property="orderDetails" javaType="list" ofType="OrderDetail">
    	<id column="order_detail_id" jdbcType="INTEGER" property="orderDetailId" />
    	 <result column="product_id" jdbcType="INTEGER" property="productId" />
    	 <result column="product_specs_id" jdbcType="INTEGER" property="productSpecsId" />
    	<result column="product_name" jdbcType="VARCHAR" property="productName" />
    	<result column="product_quantity" jdbcType="INTEGER" property="productQuantity" />
    	<result column="product_price" jdbcType="DECIMAL" property="productPrice" />
    	 <result column="actual_paid_money" jdbcType="DECIMAL" property="actualPaidMoney" />
    	<result column="status" jdbcType="TINYINT" property="status" />
    </collection>
  </resultMap>
  
 <resultMap id="OrderDetailResultMap" type="whut.pojo.OrderDetail">
    <id column="order_detail_id" jdbcType="INTEGER" property="orderDetailId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
     <result column="product_id" jdbcType="INTEGER" property="productId" />
     <result column="product_specs_id" jdbcType="INTEGER" property="productSpecsId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_quantity" jdbcType="INTEGER" property="productQuantity" />
    <result column="product_price" jdbcType="DECIMAL" property="productPrice" />
     <result column="actual_paid_money" jdbcType="DECIMAL" property="actualPaidMoney" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
   
   <select id="getListByStatus" parameterType="hashmap" resultMap="orderResultMap">
       SELECT * FROM order_master om LEFT JOIN order_detail od on om.order_id = od.order_id
       where order_status = #{status}  
       limit #{pageindex},#{pagesize}
   </select>
   
   <select id="getMasterByOrderId" parameterType="int" resultMap="orderResultMap">
       SELECT * FROM order_master om LEFT JOIN order_detail od on om.order_id = od.order_id
       where om.order_id = #{orderId} 
   </select>
   
   
  <select id="getDetailListByOrderId" parameterType="int" resultMap="OrderDetailResultMap">
       SELECT * FROM order_detail where order_id = #{orderId}
   </select>
   
   <select id="getOrderDetailByOrderDetailId" parameterType="int" resultMap="OrderDetailResultMap">
       SELECT * FROM order_detail where order_detail_id = #{orderDetailId}
   </select>
     
   <update id="modifyOrder" parameterType="orderMaster">
      UPDATE order_master 
      <set>
	      <if test="consigneeName != null">
	        consignee_name = #{consigneeName,jdbcType=VARCHAR},
	      </if>
	      <if test="consigneePhone != null">
	        consignee_phone = #{consigneePhone,jdbcType=VARCHAR},
	      </if>
	      <if test="postalCode != null">
	        postal_code = #{postalCode,jdbcType=INTEGER},
	      </if>
	      <if test="state != null">
	        state = #{state,jdbcType=VARCHAR},
	      </if>
	      <if test="city != null">
	        city = #{city,jdbcType=VARCHAR},
	      </if>
	      <if test="firstAddr != null">
	        first_addr = #{firstAddr,jdbcType=VARCHAR},
	      </if>
	      <if test="secondAddr != null">
	        second_addr = #{secondAddr,jdbcType=VARCHAR},
	      </if>
	      <if test="paymentMode != null">
	        payment_mode = #{paymentMode,jdbcType=TINYINT},
	      </if>
	      <if test="paymentMoney != null">
            payment_money = #{paymentMoney,jdbcType=DECIMAL},
         </if>
	      <if test="expressNumber != null">
	        express_number = #{expressNumber,jdbcType=VARCHAR},
	      </if>
	      <if test="payTime != null">
	        pay_time = #{payTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="shippingTime != null">
	        shipping_time = #{shippingTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="receiveTime != null">
	        receive_time = #{receiveTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="orderStatus != null">
	        order_status = #{orderStatus,jdbcType=TINYINT},
	      </if>
      </set>
    </update>
    
   <select id="modifyPro" parameterType="orderDetail">
    	
    </select>
    
    <select id="modifyOrderStatus" parameterType="hashmap">
    	UPDATE order_master SET 
    	order_status = #{status}
        WHERE order_id = #{orderId}
    </select>
    
        
   <select id="modifyProStatus" parameterType="hashmap">
    	UPDATE order_detail SET 
    	status = #{status}
        WHERE order_detail_id = #{orderDetailId}
    </select>
    
    <select id="modifyProStatusByOrderId" parameterType="hashmap">
    	UPDATE order_detail SET 
    	status = #{status}
        WHERE order_id = #{orderId}
    </select>
    
    <select id="getRecordByUser" parameterType="hashmap" resultType="SellerBill">
        SELECT return_money as money, create_time as createTime, 'income' as type, status FROM return_record where user_id = #{id} and status = 1
        <if test="timebe != null and timeen != null">
      		and date_format(create_time,'%Y%m%d') BETWEEN #{timebe} AND DATE_ADD(#{timeen},INTERVAL 1 DAY)
    	</if>
		union
		SELECT payment_money as money , pay_time as createTime ,'expend' as type, order_status as status FROM order_master where user_id = #{id} and order_status = 5
		<if test="timebe != null and timeen != null"> 
      		and date_format(pay_time,'%Y%m%d') BETWEEN #{timebe} AND DATE_ADD(#{timeen},INTERVAL 1 DAY)
    	</if>
		ORDER BY createTime
		limit #{pageindex},#{pagesize}
   </select>
    
    <insert  id="addOrderMaster" parameterType="OrderMaster" useGeneratedKeys="true" keyProperty="orderId">
    	INSERT INTO order_master 
    	(order_number,user_id,consignee_name,consignee_phone,postal_code,state,city,
    	first_addr,second_addr,payment_mode,order_moeny,discount_money,shipping_money,
    	payment_money,tax_money,create_time,pay_time)
    	values
    	(#{orderNumber},#{userId},#{consigneeName},#{consigneePhone},#{postalCode},#{state},#{city},
    	#{firstAddr},#{secondAddr},#{paymentMode},#{orderMoeny},#{discountMoney},#{shippingMoney},
    	#{paymentMoney},#{taxMoney},#{createTime},#{payTime})
    </insert>
    
    <insert id="addOrderDetailList" parameterType="OrderDetail">
    	INSERT INTO order_detail(order_id,product_id,product_specs_id,product_name,product_quantity,product_price,actual_paid_money) values
    	<foreach collection="list" item="item" index="index" separator=",">
        (#{item.orderId},#{item.productId},#{item.productSpecsId},#{item.productName},#{item.productQuantity},#{item.productPrice},#{item.actualPaidMoney} )
        </foreach>
    </insert>


</mapper>